/*!
　/ /　/ / 　　　／　|　 /　 　 `､　i　　!　　|i　　 i　 , 　l
　/　/ // 　 ／　　 |　/ 　 　 　 | |　　|　　l !　　i　 | 　|
`/ｰ- ､ /　／　　　　| /　 　 　　 | ｌ　　 |　 l l　　!　 !　 i
/　,,,,- ﾆ=ｘ- ､_　　　!/ 　 　　　　|i　　_, +十'ｲ　 i　 !　 !
''" ／ :;;r　jヽ `￣ 　ﾘ　　　　　　,, -＝､　ﾚ　|　/　/ 　:|
　/:::::;;;;;;;:`::::::l　　　　　　　　　　/ :;;r ヽヽ 　 |/| /　　 :!
　|::::::::;;;;;;;;:::::::l　 　 　 　 　 　　 ｌ:::;;;;;` ::|　ｌ　　// 　 　:!
　 '､:_　'''' 　ノ　　　　　　　　　　l　 ''''　ﾉ　| 　/　　　　:|
::::::::..　￣　　　　　　　　 　 　 　 ` ー '　　　,'　　　 　 :|
::::::::::::　　　　　　　　　　　　,　　　　..::::::::::::..l　 .:|　　　:|
::::::::::　　　　　　　　　　　　　　　　:::::::::::::::::::|　 :|　　　:|
　　　　　　　　　　　　　　　　　　 　::::::::::::::: l　.:|　 l 　:|
　　　　　　　　　　　　　　　　　　 　　 　　 /　 :|　:ｌ　 :|
　　　　　　　　　　　　　　　　　　　　　　, ' 　 :::|　:|　 :|
`　、　　　　 ⊂ﾆ＝＝ー‐-　　　　 ,　ｲ 　 　::::|　:|　 :|
*/
!function(a, b, c) {
    "use strict";
    var d = a.document, e = a.location, f = function(d, e) {
        var f, g, h, i, j = d.split("."), k = a;
        for (f = 0, g = j.length; f < g; ++f) {
            if (h = j[f], i = f === g - 1, k[h] === c) k[h] = i && e ? e : {}; else {
                if ("object" !== b.type(k[h])) throw new Error(h + " is not object.");
                if (i && e) {
                    if ("object" !== b.type(e)) throw new Error(e + " value cannot extend.");
                    b.extend(!0, k[h], e);
                }
            }
            k = k[h];
        }
        return k.ns || (k.ns = d.toLowerCase().replace(/\.(\w)/g, function(a, b) {
            return b.toUpperCase();
        })), k;
    };
    f("colon", {
        w: b(a),
        d: b(d),
        h: b("html"),
        ua: {},
        ns: f
    }), colon.config = function(a) {
        if ("object" !== b.type(a)) {
            if (!arguments[1]) return colon.config[a];
            a = {}, a[arguments[0]] = arguments[1];
        }
        for (var c in a) colon.config[c] = "object" === b.type(colon.config[c]) && "object" === b.type(a[c]) ? b.extend(!0, colon.config[c], a[c]) : a[c];
        return colon;
    }, colon.config({
        text: {},
        templates: {},
        timeout: 3e4,
        apiCache: 3e4
    }), colon.id = function(a) {
        return function() {
            return a++ + "." + +new Date();
        };
    }(0), colon.test = {
        storage: function() {
            try {
                return !(!a.sessionStorage || !a.localStorage);
            } catch (a) {
                return !1;
            }
        }(),
        file: a.File && a.FileReader && a.FileList && a.Blob
    }, function() {
        var a = navigator.userAgent.toLowerCase();
        /(?:msie|trident)/.test(a) ? (colon.ua.ie = !0, colon.ua.v = +(/(?:msie|rv:?)\s?([\d\.]+)/.exec(a) || [])[1]) : /firefox/.test(a) ? colon.ua.firefox = !0 : /chrome/.test(a) ? colon.ua.chrome = !0 : /safari/.test(a) && (colon.ua.safari = !0), 
        (colon.ua.chrome || colon.ua.safari) && (colon.ua.webkit = !0);
    }(), function() {
        var c = !!a.console;
        colon.log = c ? function() {
            if (arguments.length) {
                var a = b.makeArray(arguments);
                a.unshift(new Date().toTimeString().slice(0, 8)), "apply" in console.log ? console.log.apply(console, a) : console.dir ? console.dir(a) : console.log(a);
            }
        } : function() {
            if (arguments.length) {
                var a = b.makeArray(arguments);
                a.unshift(new Date().toTimeString().slice(0, 8)), b("#console").append(a.join(" "));
            }
        }, c || (a.console = {
            log: function() {}
        });
        var d = function(a, c) {
            var d = a + " [" + c + "]";
            return function() {
                if (arguments.length) {
                    var a = b.makeArray(arguments);
                    a.unshift(d);
                }
            };
        }, e = function(a) {
            return {
                setDefaultLevel: function() {},
                trace: d("trace", a),
                debug: d("debug", a),
                info: d("info", a),
                warn: d("warn", a),
                error: d("error", a)
            };
        };
        colon.logger = function(a) {
            return colon.logger.loggers[a] || (colon.logger.loggers[a] = e(a)), colon.logger.loggers[a];
        }, colon.logger.loggers = {};
    }(), colon.exec = function(d, e, f) {
        for (var g, h, i = a, j = d.toString().split("."), k = 0, l = j.length; k < l; ++k) {
            if (!(j[k] in i)) return;
            g = j[k], h = i, i = i[g];
        }
        return i = "function" === b.type(i) ? i.apply(f === c ? h : f, e) : e ? h[g] = e : i;
    }, colon.letterCase = function(a, b) {
        switch (a = a.replace(/_([-A-Z\d]+)/g, "$1").replace(/(^|.)([-A-Z\d]+)/g, "$1_$2").replace(/([A-Z]+)([A-Z][a-z0-9])/g, "$1_$2").replace(/-/g, ""), 
        b) {
          case "css":
            a = a.replace(/_{2,}/g, "").replace(/_/g, "-").toLowerCase();
            break;

          case "class":
            a = a.replace(/_([a-z]|[0-9])/gi, function(a, b) {
                return b.toUpperCase();
            }), a = a.charAt(0).toUpperCase() + a.slice(1);
            break;

          case "prop":
            a = a.replace(/_([a-z]|[0-9])/gi, function(a, b) {
                return b.toUpperCase();
            }).replace(/^[A-Z]+/, function(a, b) {
                return b.toLowerCase();
            });
            break;

          default:
            a = a.toLowerCase();
        }
        return a;
    };
    var g = a.p = a.p || {};
    g.ua = g.ua || {}, g.config = g.config || {};
    var h = a.pixiv = a.pixiv || {};
    b(function() {
        var c, d, e = b("#init-config"), f = e.length ? JSON.parse(e.val()) : {};
        for (d in f) {
            for (var g = d.split("."), h = a, i = 0; i < g.length; i++) i === g.length - 1 ? (c = g[i], 
            h[c] = "") : ("undefined" == typeof h[g[i]] && (h[g[i]] = {}), h = h[g[i]]);
            h[c] = f[d];
        }
    }), b.fn.values = function(a) {
        var c = b(this).find(":input").get();
        return "object" != typeof a ? (a = {}, b.each(c, function() {
            this.name && !this.disabled && (this.checked || /select|textarea/i.test(this.nodeName) || /text|hidden|password/i.test(this.type)) && (a[this.name] = b(this).val());
        }), a) : (b.each(c, function() {
            this.name && a[this.name] && ("checkbox" === this.type || "radio" === this.type ? b(this).prop("checked", a[this.name] === b(this).val()) : b(this).val(a[this.name]));
        }), b(this));
    }, colon.throttle = function(b, c, d) {
        var e = null;
        return function() {
            if (!e) {
                var f = this, g = arguments;
                b.apply(c || this, g), e = colon.loop.timeout(function() {
                    colon.ua.ie ? a.setTimeout(function() {
                        e = null;
                    }, 0) : e = null, b.apply(c || f, g);
                }, null, d);
            }
        };
    }, colon.debounce = function(b, c, d) {
        var e = function() {
            var f = this, g = arguments;
            e.cancel(), e.timer = a.setTimeout(function() {
                e.timer = null, b.apply(c || f, g);
            }, d || 250);
        };
        return e.timer = null, e.cancel = function() {
            e.timer && a.clearTimeout(e.timer);
        }, e;
    }, colon.Loop = function(a) {
        (a || 0 === a) && (this.delay = a), this.processes = {};
    }, colon.Loop.prototype = {
        delay: 250,
        timer: null,
        processes: null,
        size: 0,
        uid: 0,
        cycle: 0,
        interval: function(a, b, c) {
            return this.processes[++this.uid] = [ a, b, c, 0 ], this.timer || this.start(), 
            ++this.size, this.uid;
        },
        timeout: function(a, b, c) {
            return this.interval(function(c) {
                return a.call(b, c), !1;
            }, null, c);
        },
        clear: function(a) {
            this.processes[a] && (delete this.processes[a], --this.size || this.stop());
        },
        process: function() {
            ++this.cycle;
            var a, c, d, e, f, g, h, i = this.processes, j = this.delay, k = this.cycle;
            for (g in i) h = i[g], a = h[0], c = h[1], d = h[2], e = h[3], (!d || d * (e + 1) <= j * k) && (f = a.call(c, e), 
            f === !1 ? this.clear(g) : "number" === b.type(f) && f !== j && (h[2] = f), ++h[3]);
        },
        start: function() {
            this.stop(), this.timer = a.setInterval(b.proxy(this.process, this), this.delay);
        },
        stop: function() {
            this.timer && (a.clearInterval(this.timer), this.timer = null), this.cycle = 0;
        },
        reset: function() {
            this.stop(), this.processes = [];
        }
    }, colon.loop = new colon.Loop(), colon.async = function() {
        var c = b.Deferred(), d = arguments;
        return a.setTimeout(function() {
            c.resolveWith(null, d);
        }, 100), c.promise();
    }, colon.addTimeout = function(c, d) {
        return "object" !== b.type(c) && (d = c, c = null), c || (c = b.Deferred()), d = d || 0 === d ? d : colon.config.timeout, 
        a.setTimeout(function() {
            c.reject(null, "timeout");
        }, d), c;
    }, f("colon.req", {
        queue: {},
        id: function(c, d, e) {
            var f;
            return "object" !== b.type(d) && 1 !== arguments.length || (e = d, d = c, c = "GET"), 
            a.FormData && e instanceof FormData ? null : (e && (f = d.indexOf("?") === -1 ? "?" : "&"), 
            c.toUpperCase() + "+" + d + (e ? f + b.param(e) : ""));
        },
        storeObject: function(a) {
            return function(b, c) {
                return colon.storage.localStorage(b, c, a);
            };
        },
        to: function(d, e, f, g) {
            var h, i, j, k = null;
            if (g || (g = {}), a.FormData && f instanceof FormData ? (g.ajaxSettings || (g.ajaxSettings = {}), 
            g.ajaxSettings.contentType = !1, g.ajaxSettings.processData = !1) : "object" === b.type(f) && (f = colon.query.slim(f)), 
            "GET" === d && (g.cache === c && (g.cache = 1e4), g.cache)) {
                var l = this.id(d, e, f);
                if ("function" == typeof g.cache_callback && g.cache_callback(l), h = colon.storeObject(g.cache, l), 
                h && (i = h()) && "..." !== i) return colon.async(i, "cache", null, h);
            }
            return j = this.unite(k, function() {
                var a = b.ajax(b.extend({
                    type: d,
                    url: e,
                    data: f,
                    dataType: "json",
                    timeout: colon.config.timeout
                }, g.ajaxSettings));
                return g.filter && (a = a.then(g.filter)), a;
            }), h && (j = j.then(function(a) {
                h(a);
                var c = b.makeArray(arguments);
                return c.push(h), b.Deferred().resolveWith(this, c);
            })), j.always(function() {}), g.update && j.done(function(a) {
                colon.storage.send(g.update, [ a ]);
            }), j.promise();
        },
        unite: function(a, c) {
            var d;
            return a && 0 === a.indexOf("GET") ? this.loading(a) ? (d = b.Deferred(), this.queue[a] || (this.queue[a] = []), 
            this.queue[a].push(d), d) : (colon.storage.localStorage(a, "...", colon.config.timeout), 
            this.queue[a] = [], c().done(function() {
                var c = [ !0, a, b.makeArray(arguments) ];
                colon.storage.send("colon.req.fire", c), colon.req.fire.apply(this, c);
            }).fail(function() {
                var c = [ !1, a, b.makeArray(arguments) ];
                colon.storage.send("colon.req.fire", c), colon.req.fire.apply(this, c);
            }).always(function() {
                "..." === colon.storage.localStorage(a) && colon.storage.localStorage(a, null), 
                delete colon.req.queue[a];
            })) : c();
        },
        loading: function(a) {
            return !(!this.queue[a] && "..." !== colon.storage.localStorage(a));
        },
        fire: function(a, b, c) {
            var d, e = colon.req.queue[b];
            if (e) {
                d = a ? "resolveWith" : "rejectWith";
                for (var f, g = 0; f = e[g]; ++g) f[d](this, c);
            }
        }
    }), b.each([ "GET", "POST", "PUT", "DELETE" ], function(a, b) {
        colon.req[b.toLowerCase()] = function(a, c, d) {
            return colon.req.to(b, a, c, d);
        };
    }), f("colon.get", {
        css: function(a) {
            var b = d.createElement("link");
            b.rel = "stylesheet", b.href = a, d.getElementsByTagName("head")[0].appendChild(b);
        },
        script: function(a) {
            return b.ajax({
                url: a,
                dataType: "script",
                cache: !0,
                scriptCharset: "utf-8"
            });
        }
    }), g.script = function(a, c) {
        return c && (a += "?" + g.queryString(c)), g.script[a] || (g.script[a] = {
            loading: !1,
            loaded: !1,
            queue: [],
            load: function(c) {
                var d = this;
                if (c && (this.loaded = !1), this.loaded) return colon.async();
                if (this.loading) {
                    var e = b.Deferred();
                    return this.queue.push(e), e;
                }
                return this.loading = !0, b.ajax({
                    url: a,
                    dataType: "script",
                    cache: !0,
                    scriptCharset: "utf-8"
                }).always(function(a, b, c) {
                    var e = d.queue;
                    if (d.loading = !1, e.length) {
                        for (var f, g = 0; f = e[g]; ++g) "success" === b ? f.resolveWith(this, [ a, "forward" ]) : f.rejectWith(this, [ a, "forward", c ]);
                        d.queue = [];
                    }
                }).done(function() {
                    d.loaded = !0;
                });
            }
        }), g.script[a];
    }, b.fn.boxHeight = function() {
        var a = [], c = 0, d = 0;
        return this.each(function() {
            var e = b(this);
            e.position().top !== c && (a.length > 1 && b(a).height(d), a = [], d = 0, c = e.position().top), 
            a.push(this), d = Math.max(e.height(), d);
        }), a.length > 1 && b(a).height(d), this;
    }, b.fn.getId = function(a) {
        a = a || /(\d+)/;
        var b = this.attr("id");
        if (!b) return null;
        var c = (a.exec(b) || []).slice(1);
        return (c.length > 1 ? c : c[0]) || null;
    }, b.fn.selectbox = function(a) {
        return a = a || {}, this.each(function() {
            var c = b(this), d = a.current || b("div.current", this), e = a.item_container || b("ul.items", this), f = b("li", e), g = a.default_item || f.filter(".current"), h = a.callback, i = !1;
            c.hover(function() {
                i || (f.each(function() {
                    var a = b(this).click(function(b) {
                        return !a.hasClass("current") && (g.removeClass("current"), g = a.addClass("current"), 
                        d.text(g.text()), c.mouseleave(), h ? h.call(this, b) : void 0);
                    });
                }), i = !0), e.show();
            }, function() {
                e.hide();
            });
        });
    }, b.fn.urlLink = b.fn.urlAutoLink = function() {
        return this.each(function() {
            this.innerHTML = h.addURLLink(this.innerHTML);
        });
    }, b.fn.hashTagLink = b.fn.hashTagAutoLink = function() {
        return this.each(function() {
            this.innerHTML = h.addHashTagLink(this.innerHTML);
        });
    }, a.countStrlen = function(a, c, d) {
        if (!a || !c || !d) return !1;
        var e = b("#" + a).val().replace(/\r\n?/, "\n").length;
        d < e ? b("#" + c).html('<span class="error">' + e + "</span>") : b("#" + c).html(e);
    }, a.countTags = function(a, c, d) {
        if (!a || !c || !d) return !1;
        var e = b.trim(b("#" + a).val()), f = e.split(/\s+|　+/);
        if (!f) return !1;
        var g = f.length;
        b("#" + c).html(g > d ? '<span class="error">' + g + "</span>" : g);
    }, g.template = {
        textCache: {},
        cache: {},
        find: function(a) {
            var c = b("#template-" + a);
            return c.length ? c : null;
        },
        get: function(a) {
            var c, d;
            if (this.textCache[a]) d = this.textCache[a]; else {
                if (c = this.find(a), !c) return "";
                d = b.trim(c.html()), "raw" !== c.dataset("format") && (d = d.replace(/[\r\n]/g, "")), 
                this.textCache[a] = d;
            }
            return d;
        },
        apply: function(a, b, c) {
            var d, e;
            if (this.cache[a]) e = this.cache[a]; else {
                if (d = this.get(a), !d || !b) return d;
                e = Handlebars.compile(d), c && (this.cache[a] = e);
            }
            return e(b) || "";
        },
        replaceMarkup: /\{\{(\{)?([^}]+)(\})?\}\}/g,
        replace: function(a, b) {
            var c = this.get(a);
            return c && b ? c.replace(this.replaceMarkup, function(a, c, d, e) {
                var f = !(c && e);
                return d = b[d] || "", f ? colon.html.escape(d) : d;
            }) : c;
        },
        clear: function(a) {
            delete this.cache[a];
        }
    }, f("colon.dispatcher", {
        location: a.location,
        stash: [],
        connect: function(a, b, c, d) {
            return (a || 0 === a) && (a = a.valueOf(), ("object" != typeof a || a instanceof RegExp) && (a = {
                pathname: a
            }), this.stash.push([ a, b, c, d ])), this;
        },
        and: function() {
            var a = this.stash, b = a.length;
            return b && (a[b - 1][3] = !0), this;
        },
        dispatch: function(a) {
            a = a || this.location;
            for (var b, c = this.stash, d = {}, e = 0; b = c[e]; ++e) {
                var f = b[0], g = b[1], h = b[2], i = b[3], j = !1;
                for (var k in f) {
                    var l = f[k], m = a[k];
                    if (m) {
                        var n = this.match(l, m);
                        if (j = !!n, !j) break;
                        d[k] = n;
                    }
                }
                if (j && (g && g.call(h, d), !i)) break;
            }
            return this.clear(), this;
        },
        match: function(a, b) {
            var c;
            return a instanceof RegExp ? c = a.exec(b) || !1 : (a = a.toString(), c = a === b && a), 
            c;
        },
        clear: function() {
            return this.stash = [], this;
        }
    }), f("colon.$"), colon.$.find = function(a, c) {
        return a = b(a, c), !!a.length && a;
    }, f("colon.fallback", {
        setup: function() {
            colon.ua.ie && colon.fallback.focus();
        }
    }), colon.fallback.focus = function() {
        b("input[autofocus]:last").focus();
    }, colon.ga = {
        setup: function() {
            this.on(), this.trackEvent();
        },
        track: function(a) {
            try {
                _gaq.push(a);
            } catch (a) {}
        },
        trackEvent: function(a) {
            var b = colon.storage.localStorage("refs");
            if (a = a ? [ a ].concat(b) : b) {
                for (var c, d = 0; c = a[d]; ++d) c.unshift("_trackEvent"), colon.ga.track(c);
                colon.storage.localStorage("refs", null);
            }
        },
        trackPageview: function(a) {
            colon.ga.track([ "_trackPageview", a ]);
        },
        targetUser: function(a) {
            if (!h.user.id) return !1;
            switch (b.type(a)) {
              case "array":
                return b.inArray(+h.user.id.slice(-1), a) !== -1;

              case "function":
                return a();

              default:
                return !0;
            }
        },
        later: function(a) {
            var b = colon.storage.localStorage("refs") || [];
            b.push(a), colon.storage.localStorage("refs", b);
        },
        parseExpires: function(a) {
            var b = a.split(/\D/);
            --b[1];
            var c = Date.UTC.apply(null, b) - 324e5;
            return new Date(c);
        },
        handler: function(a) {
            var b = a.data.data;
            "submit" === a.type || "change" === a.type || "click" === a.type && "A" === this.tagName && "_blank" !== this.target ? colon.ga.later(b) : colon.ga.trackEvent(b);
        },
        on: function() {
            var a, b, c, d, f, g, h, i, j, k = e.pathname + e.search, l = colon.config.ga;
            for (a in l) if (b = l[a], !(!b.page.test(k) || b.expires && +new Date() > this.parseExpires(b.expires) || b.frequency && !this.targetUser(b.frequency))) for (c = b.suffix() || "", 
            d = 0, f = b.events; g = f[d]; ++d) h = g.shift(), i = g.shift(), g[0] += c, j = [ a ].concat(g), 
            colon.d.on(i + ".ga", h, {
                data: j
            }, this.handler);
        },
        off: function() {
            colon.d.off(".ga");
        }
    }, Handlebars.registerHelper("is", function(a, b, c, d) {
        var e = "==" === b ? a == c : "!=" === b ? a != c : "<" === b ? a < c : "<=" === b ? a <= c : ">" === b ? a > c : ">=" === b ? a >= c : "&&" === b ? a && c : "||" === b && (a || c);
        return e ? d.fn(this) : d.inverse(this);
    }), Handlebars.registerHelper("eq", function(a, b, c) {
        return a == b ? c.fn(this) : c.inverse(this);
    }), Handlebars.registerHelper("ne", function(a, b, c) {
        return a != b ? c.fn(this) : c.inverse(this);
    }), Handlebars.registerHelper("t", function() {
        return colon.t.apply(null, arguments);
    }), Handlebars.registerHelper("url_encode", function(b) {
        return a.encodeURIComponent(b);
    }), Handlebars.registerHelper("comma", function(a) {
        return colon.format(a);
    }), Handlebars.registerHelper("format", function(a) {
        return colon.format(a);
    }), Handlebars.registerHelper("truncate", function(a, b) {
        return colon.truncate(a, b);
    }), Handlebars.registerHelper("join", function(a, b) {
        var c = b.fn, d = b.inverse, e = [];
        if (a && a.length) {
            for (var f = 0, g = a.length; f < g; ++f) e[f] = c(a[f]);
            e = e.join(b.hash.separator);
        } else e = d(this);
        return e;
    }), Handlebars.registerHelper("prop", function(a) {
        return g.exec(a, h);
    }), Handlebars.registerHelper("get_thumbnail_classes", function(a, b, c, d) {
        var e = " _work";
        return "1" === b ? e += " manga" : "2" === b && (e += " ugoku-illust"), parseInt(c) > 1 && (e += " multiple", 
        "1" === d ? e += " rtl" : "2" === d && (e += " ltr")), e;
    }), function(a) {
        a.fn.dataset = function(b, d) {
            var e;
            if (b === c) {
                if (!this.length || 1 !== this[0].nodeType) return this;
                for (var f, g = {}, h = this[0].attributes, i = 0, j = h.length; i < j; ++i) f = h[i], 
                e = f.name, 0 === e.indexOf("data-") && (g[a.fn.dataset.camelize(e.slice(5))] = f.value);
                return g;
            }
            if ("object" == typeof b) {
                for (var k in b) e = "data-" + a.fn.dataset.dashize(k), this.attr(e, b[k]);
                return this;
            }
            return e = "data-" + a.fn.dataset.dashize(b), d === c ? this.attr(e) : this.attr(e, d);
        };
        var b = /([a-z])([A-Z])/g, d = /-([a-z]|[0-9])/gi;
        a.fn.dataset.dashize = function(a) {
            return a.replace(b, "$1-$2").toLowerCase();
        }, a.fn.dataset.camelize = function(a, b) {
            return a = a.replace(d, function(a, b) {
                return b.toUpperCase();
            }), b ? a.charAt(0).toUpperCase() + a.slice(1) : a;
        };
    }(jQuery), b.easing.easeOutExpo = function(a, b, c, d, e) {
        return b === e ? c + d : d * (-Math.pow(2, -10 * b / e) + 1) + c;
    }, b.fn.reverse = function() {
        return b(this.get().reverse());
    }, f("colon.notification", {
        status: function() {
            if (!a.Notification) return null;
            if (a.Notification.permission) return a.Notification.permission;
            if (a.webkitNotifications) {
                var b = [ "granted", "default", "denied" ][a.webkitNotifications.checkPermission()];
                return a.Notification.permission = b;
            }
        },
        request: function(b) {
            this.status() && a.Notification.requestPermission(function(c) {
                a.Notification.permission || (a.Notification.permission = c), b && b(c);
            });
        },
        show: function(b, c, d) {
            if ("granted" === this.status()) {
                var e = new a.Notification(b, c);
                d && d(e);
            }
        }
    }), f("colon.storage", {
        setup: function() {
            colon.test.storage && colon.storage.on(this.ns + ".exec", function(a) {
                a && a.name && colon.exec(a.name, a.args);
            });
        },
        send: function(a, b) {
            if (colon.test.storage) {
                var c = this.ns + ".exec";
                colon.storage.localStorage(c, {
                    name: a,
                    args: b
                }), colon.storage.localStorage(c, null);
            }
        },
        parse: function(a, c) {
            try {
                return a = JSON.parse(a), c !== !1 && "object" === b.type(a) ? colon.storage.parseExpires(a) : a;
            } catch (b) {
                return a;
            }
        },
        addExpires: function(a, b) {
            return b = b instanceof Date ? b : +new Date() + (b || 0), {
                data: a,
                expires: b
            };
        },
        parseExpires: function(a) {
            var b = a.expires;
            return b || 0 === b ? +new Date() > b ? c : a.data : a;
        },
        config: function(a, d, e) {
            return function(f, g, i) {
                return f = colon.letterCase((a ? a + "_" : "") + f, "cookie"), i = b.extend({
                    expires: 7776e6,
                    path: "/",
                    domain: h.domain
                }, d, i), e && e.update === !1 || g !== c ? colon.storage.cookie(f, g, i) : colon.storage.updateCookie(f, i);
            };
        },
        object: function(a) {
            return function(b, d, e) {
                var f = a[b];
                switch (d) {
                  case c:
                    return f ? colon.storage.parseExpires(f) : c;

                  case null:
                    delete a[b];
                    break;

                  default:
                    a[b] = e ? colon.storage.addExpires(d, e) : d;
                }
            };
        },
        sessionStorage: function(a, b) {
            return colon.storage.storage("session", a, b);
        },
        localStorage: function(a, b, d) {
            if (null !== b && b !== c) {
                if (!d && null !== d) {
                    var e = colon.storage.parse(colon.storage.storage("local", a), !1);
                    e && e.expires && (d = e.expires);
                }
                d && (b = colon.storage.addExpires(b, d));
            }
            return colon.storage.storage("local", a, b);
        },
        storage: function(b, d, e) {
            var f;
            if (colon.test.storage && a.JSON && d && (f = function() {
                return a[b + "Storage"];
            }())) switch (e) {
              case null:
                f.removeItem(d);
                break;

              case c:
                return colon.storage.parse(f[d]);

              default:
                try {
                    f.removeItem(d), f.setItem(d, JSON.stringify(e));
                } catch (a) {}
            }
        },
        cookie: function(e, f, g) {
            if (e) switch (f) {
              case c:
                var h = d.cookie;
                if (h && "" !== h) for (var i, j = h.split(";"), k = 0, l = j.length; k < l; ++k) if (i = b.trim(j[k]), 
                i && 0 === i.indexOf(e + "=")) return a.decodeURIComponent(i.slice(e.length + 1));
                break;

              default:
                g = g || {}, null === f && (f = "", g.expires = -1);
                var m, n = {
                    expires: g.expires ? new Date(+new Date() + g.expires).toUTCString() : c,
                    path: g.path,
                    domain: g.domain
                }, o = [];
                for (var p in n) m = n[p], m && o.push(p + "=" + m);
                g.secure && o.push("secure"), o.unshift(a.encodeURIComponent(f)), d.cookie = e + "=" + o.join(";");
            }
        },
        updateCookie: function(a, b) {
            var d = colon.storage.cookie(a);
            return d !== c && (colon.storage.cookie(a, null), colon.storage.cookie(a, d, b)), 
            d;
        },
        cleanup: function() {
            if (colon.test.storage) {
                var b, d, e, f = [];
                for (b = 0, d = a.localStorage.length; b < d; ++b) f[b] = a.localStorage.key(b);
                for (b = 0, d = f.length; b < d; ++b) e = f[b], colon.storage.parse(a.localStorage.getItem(e)) === c && colon.storage.localStorage(e, null);
            }
        },
        id: function(a) {
            return a.replace(/(_+)/g, "$1_").replace(/\./g, "_");
        },
        on: function(a, b, c) {
            var d;
            colon.w[c ? "one" : "on"]("storage." + colon.storage.id(a), function(c) {
                c = c.originalEvent, c.key === a && (d = colon.storage.parse(c.newValue), null !== d && b(d, "storage", c));
            });
        },
        one: function(a, b) {
            return colon.storage.on(a, b, !0);
        },
        off: function(a) {
            colon.w.off("storage." + colon.storage.id(a));
        }
    }), colon.storage.setup(), f("colon", {
        storeObject: function(a, c) {
            var d, e, f = b.type(a);
            switch (f) {
              case "function":
                if (a.done) return a;
                a.done = !0;
                break;

              case "object":
                a = colon.storage.object(a);
                break;

              case "number":
                d = a, a = colon.storage.localStorage;
                break;

              default:
                a = a === !0 ? colon.storage.sessionStorage : null;
            }
            return e = function(b) {
                return a(c, b, d);
            }, e.update = function(a) {
                e(b.extend(!0, e(), a));
            }, e;
        }
    }), f("colon.ui", {
        popupPosition: function(a, d, e) {
            var f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y;
            a = b(a), e || (e = {}), f = e.space || 5, g = e.margin || 0, h = colon.w.scrollTop(), 
            i = colon.w.scrollLeft(), j = colon.w.width(), k = colon.w.height(), l = i + j, 
            m = a.outerWidth(), n = a.outerHeight(), d ? (d = b(d), q = d.offset(), r = q.top, 
            s = q.left, t = d.outerWidth(), u = d.outerHeight()) : (r = e.top, s = e.left, t = e.width, 
            u = 0), p = e.offset === c ? Math.max(s + (t - m) / 2, i + f) : Math.max(s + e.offset, i) + f, 
            p + m + f > l && s - i > l - (s + t) && (p = l - m - f), e.forceUnderTarget || h + n + f + g > r && r + u + n + f + g <= h + k ? (o = r + u + g, 
            a.addClass("under-target")) : (o = r - n - g, a.removeClass("under-target")), e.nipple && (v = b(e.nipple, a), 
            x = e.nippleMargin || 0, y = v.outerWidth(), p + m - s < y + 2 * x || s + t - p < y + 2 * x ? v.addClass("_hidden") : (w = t / 2, 
            w += s - p, v.removeClass("_hidden").css("left", Math.max(w, x + y / 2)))), a.css({
                top: o,
                left: p
            });
        }
    }), f("colon.ui.expander", {
        setup: function() {
            b(d).on("click", ".ui-expander-container .expand", b.proxy(this.expand, this)).on("click", ".ui-expander-container .collapse", b.proxy(this.collapse, this)), 
            this.add();
        },
        add: function(a) {
            var c = this;
            a = b(a || d), b(".ui-expander-container", a).each(function() {
                var a = b(this), d = b(".expand", a), e = b(".ui-expander-target", a).outerHeight(!0), f = a.height();
                e > f && (a.data("ui-expander-enabled", !0), a.hasClass("expanded") ? c.expand({
                    target: this
                }) : d.show());
            });
        },
        expand: function(a) {
            var c = b(a.target).closest(".ui-expander-container"), d = b(".ui-expander-target", c);
            c.data("ui-expander-enabled") && c.addClass("expanded"), c.css("max-height", "").css("max-height", d.outerHeight(!0)).trigger("expand");
        },
        collapse: function(a) {
            var c = b(a.target).closest(".ui-expander-container");
            c.css("max-height", "").trigger("collapse"), c.data("ui-expander-enabled") && c.removeClass("expanded").find(".expand").show();
        }
    }), f("colon.ui.Counter", function(a, c) {
        this.container = a = b(a), this.target = b("input, textarea", this.container).eq(0), 
        this.counter = b(".count", this.container), b.extend(this.options, {
            limit: +this.target.attr("maxlength")
        }, this.target.dataset(), c), this.target.on("keyup blur", b.proxy(this.update, this)).on("focus", function() {
            a.addClass("focused");
        }).on("blur", function() {
            a.removeClass("focused");
        }), this.count() && this.update();
    }), colon.ui.Counter.setup = function(a) {
        b(".ui-counter", a).each(function() {
            new colon.ui.Counter(this);
        });
    }, colon.ui.Counter.prototype = {
        options: {
            limit: 140
        },
        container: null,
        target: null,
        counter: null,
        over: !1,
        update: function() {
            var a = this.count();
            this.counter.text(a), this.over ? a <= this.options.limit && (this.over = !1, this.ok()) : a > this.options.limit && (this.over = !0, 
            this.ng());
        },
        count: function() {
            return this.target.val().length;
        },
        ok: function() {
            this.container.removeClass("ng").addClass("ok");
        },
        ng: function() {
            this.container.removeClass("ok").addClass("ng");
        }
    }, colon.ns("colon.ui.Tag", function(a, c) {
        this.target = b(a), b.extend(this.options, c), this.create(), this.watch();
    }), colon.ui.Tag.setup = function(a) {
        b("._ui-tag", a).each(function() {
            new colon.ui.Tag(this, b(this).dataset("data"));
        });
    }, colon.ui.Tag.split = function(a) {
        return a = colon.ui.Tag.trim(a), a ? a.split(/[\s\xA0　]+/) : [];
    }, colon.ui.Tag.find = function(a, b) {
        a = colon.ui.Tag.trim(a).toLowerCase();
        for (var c = 0, d = b.length; c < d; ++c) if (a === b[c].toLowerCase()) return c;
        return -1;
    }, colon.ui.Tag.match = function(a, b, c) {
        a = colon.ui.Tag.trim(a).toLowerCase();
        var d, e = /^"(.+)"$/.exec(a), f = [];
        e && (a = e[1]);
        for (var g = 0, h = b.length; g < h; ++g) d = colon.ui.Tag.trim(b[g]).toLowerCase(), 
        (e && d === a || d.indexOf(a) !== -1) && (d = c ? c(d) : d, d && f.push(d));
        return f.length ? f : null;
    }, colon.ui.Tag.normalize = function(a) {
        return a.replace(/^"(.+)"$/, "$1");
    }, colon.ui.Tag.trim = function(a) {
        return a ? a.toString().replace(/^[\s\xA0　]+/, "").replace(/[\s\xA0　]+$/, "") : "";
    }, colon.ui.Tag.prototype = {
        target: null,
        options: {
            max: 10
        },
        recentValue: "",
        container: null,
        tagsContainer: null,
        countContainer: null,
        input: null,
        tags: null,
        watch: function() {
            var a = this;
            this.target.on("uitagadd", function(b, c) {
                a.add(c), a.input.focus();
            }).on("uitagremove", function(b, c) {
                a.remove(c), a.input.focus();
            });
        },
        value: function() {
            return this.tags.join(" ");
        },
        create: function() {
            var a = this, c = this.target, d = colon.ui.Tag.split(c.val()), e = b(colon.template("ui-tag", {
                tags: d,
                max: this.options.max
            })).insertBefore(c);
            c.hide(), this.container = e.click(function() {
                a.input.focus();
            }).on("click", ".close", function(c) {
                a.remove(b(this).attr("data-tag")), c.stopPropagation();
            }), this.tagsContainer = b(".tags", e), this.countContainer = b(".count", e), this.input = b("input", e).on("keypress keyup blur", b.proxy(this.update, this)), 
            this.tags = d;
        },
        update: function(a) {
            var c, d = this.input.val(), e = a.altKey || a.ctrlKey || a.shiftKey, f = "keypress" === a.type && a.which === colon.ui.shortcut.keyList.RETURN && !e;
            if (/[\s　]$/.test(d) || f || "blur" === a.type ? (c = colon.ui.Tag.split(d), c.length && (this.input.val(""), 
            this.recentValue = "", this.add(c))) : "keyup" !== a.type || "" !== this.recentValue || a.which !== colon.ui.shortcut.keyList.DELETE || e ? this.recentValue = d : (d = b("li", this.tagsContainer).eq(-1).attr("data-tag"), 
            d && this.remove(d)), f) return !1;
        },
        updateCount: function() {
            var a = this.countContainer;
            if (a.length) {
                var b = this.tags.length;
                a.text(b), b > this.options.max ? a.addClass("over") : a.removeClass("over");
            }
        },
        add: function(a) {
            var c = !1;
            if (!a) return c;
            "string" === b.type(a) && (a = [ a ]);
            for (var d = 0, e = a.length; d < e; ++d) {
                var f = colon.ui.Tag.trim(a[d]);
                if (f) {
                    var g = colon.ui.Tag.find(f, this.tags);
                    g === -1 && (this.tagsContainer.append(colon.template("ui-tag-item", {
                        tag: f
                    })), this.tags.push(f), c = !0);
                }
            }
            return c && (this.target.val(this.value()).trigger("uitagupdate", [ this.tags ]), 
            this.updateCount()), c;
        },
        remove: function(a) {
            var c;
            return a = colon.ui.Tag.trim(a), c = colon.ui.Tag.find(a, this.tags), c !== -1 && (b("li", this.tagsContainer).eq(c).remove(), 
            this.tags.splice(c, 1), this.target.val(this.value()).trigger("uitagupdate", [ this.tags ]), 
            this.updateCount(), !0);
        }
    }, f("colon.ui.toggleSwitch", {
        setup: function() {
            colon.d.on("click.uiswitch", "._ui-switch", function() {
                var a, c = b(this);
                c.hasClass("_disabled") || (a = !c.hasClass("on"), a ? c.removeClass("off").addClass("on").trigger("uiswitch", [ a ]) : c.removeClass("on").addClass("off").trigger("uiswitch", [ a ]), 
                b("input", this).prop("checked", a));
            });
        }
    }), f("colon.ui.shortcut", {
        keyList: {
            DELETE: 8,
            RETURN: 13,
            ESC: 27,
            SPACE: 32,
            PAGEUP: 33,
            PAGEDOWN: 34,
            "←": 37,
            "↑": 38,
            "→": 39,
            "↓": 40
        },
        keys: null,
        pausedKeys: [],
        setup: function() {
            var a = this;
            this.keys = [], colon.d.on("keydown.uiShortcut", function(b) {
                var c = [ b.which, b.ctrlKey, b.altKey, b.shiftKey ];
                if (!a.paused(c)) {
                    var d = b.target.nodeName;
                    return b.which === a.keyList.ESC || b.which === a.keyList.DELETE || "INPUT" !== d && "TEXTAREA" !== d && !b.metaKey ? a.trigger(c, b) : void 0;
                }
            });
        },
        terminate: function() {
            colon.d.off("keydown.uiShortcut"), this.keys = null;
        },
        parse: function(a, d) {
            var e, f, g, h = [];
            if ("string" !== b.type(a)) return [ a ];
            a = ("" + a).split(/\s+/);
            for (var i, j, k = 0; i = a[k]; ++k) e = /([^+]+?)(?:\..+)?$/.exec(i)[1], null !== e && (f = this.keyList[e] ? this.keyList[e] : "number" === b.type(e) ? +e : e.charCodeAt(0), 
            g = i.slice(1).split(".").slice(1), j = [ f, /ctrl/i.test(i), /alt/i.test(i), /shift/i.test(i), g.length ? g : c ], 
            h.push(j), d && d.call(this, j));
            return h;
        },
        pause: function(a) {
            this.parse(a, function(a) {
                this.pausedKeys.push(a);
            });
        },
        paused: function(a) {
            return this.find(this.pausedKeys, this.parse(a)[0]);
        },
        restart: function(a) {
            var b = this.pausedKeys;
            this.parse(a, function(a) {
                this.find(b, a, function(a, c) {
                    b.splice(c, 1);
                });
            });
        },
        bind: function(a, c, d) {
            return this.keys || this.setup(), c = b.proxy(c, d || this), this.parse(a, function(a, b) {
                a && (a.push(c), this.keys.push(a));
            }), this;
        },
        unbind: function(a) {
            var b = this.keys;
            return this.parse(a, function(a) {
                this.find(b, a, function(a, c) {
                    b.splice(c, 1);
                });
            }), b.length || this.terminate(), this;
        },
        trigger: function(a, b) {
            var c;
            return a = this.parse(a)[0], this.find(this.keys, a, function(a) {
                c = a[5](b);
            }), c;
        },
        find: function(a, b, d) {
            var e, f, g = [];
            for (e = a.length - 1; f = a[e]; --e) !b[0] && !b[4] || b[0] && (b[0] !== f[0] || b[1] !== f[1] || b[2] !== f[2] || b[3] !== f[3]) || b[4] && !this.findNamespace(a, f[4] || [], b) || (g.push(e), 
            d && d.call(this, f, e));
            return g.length ? g : c;
        },
        findNamespace: function(a, d, e) {
            var f, g, h, i = [];
            for (f = 0; h = d[f]; ++f) if (e) {
                if (b.inArray(h, e[4]) !== -1) return !0;
            } else for (g = 0; e = a[g]; ++g) b.inArray(h, e[4]) !== -1 && i.push(g);
            return i.length ? i : c;
        }
    }), f("colon.ui.modal", {
        modals: [],
        blockModals: [],
        clickTarget: null,
        initialized: !1,
        paused: !1,
        baseZIndex: 1e4,
        setup: function() {
            colon.d.on("click", ".ui-modal-trigger[data-target]", function() {
                var a = b(this).dataset();
                colon.ui.modal.push("." + a.target, b.extend({
                    block: !0
                }, a));
            });
        },
        initialize: function() {
            colon.d.on("click." + this.ns, b.proxy(this.click, this)), colon.ui.shortcut.bind("ESC.uimodal", this.esc, this), 
            this.initialized = !0;
        },
        terminate: function() {
            colon.d.off("click." + this.ns), colon.ui.shortcut.unbind("ESC.uimodal"), this.initialized = !1;
        },
        esc: function() {
            return this.get().options.esc !== !1 && this.pop(), !1;
        },
        get: function(a, b) {
            var c = this.modals;
            if (a) {
                var d = this.find(c, a);
                return d !== -1 ? b ? c.splice(d, 1)[0] : c[d] : null;
            }
            return b ? c.pop() : c[c.length - 1];
        },
        find: function(a, b) {
            for (var c, d = 0; c = a[d]; ++d) if (c.id === b) return d;
            return -1;
        },
        scrollTop: function() {
            var a = this.blockModals.slice(-1)[0];
            return a ? a.target.scrollTop() - colon.w.scrollTop() : null;
        },
        block: function(a) {
            this.blockModals.length || colon.h.addClass("_no-scroll"), this.blockModals.push(a);
        },
        unblock: function(a) {
            a ? this.blockModals.splice(this.find(this.blockModals, a), 1) : this.blockModals.pop(), 
            this.blockModals.length || colon.h.removeClass("_no-scroll");
        },
        pause: function() {
            this.paused = !0;
        },
        restart: function() {
            this.paused = !1;
        },
        click: function(a) {
            var c, d, e;
            this.paused || 1 !== a.which || (c = b(a.target), d = c.closest(".ui-modal-trigger")[0], 
            e = this.get(), (c.hasClass("ui-modal-close") || c.closest(".ui-modal-close-box").length || this.modals.length && !d && !c.closest(e.target).length && e.options.esc !== !1) && this.pop());
        },
        toggle: function(a, c, d) {
            if (!this.paused) {
                if (a = b(a)[0], this.modals.length && a === this.clickTarget) return this.pop(), 
                !1;
                var e = this.push(c, d);
                return this.clickTarget = a, e;
            }
        },
        push: function(a, c) {
            var d, e;
            if (a = b(a), this.paused || !a.length) return null;
            d = colon.id(), c || (c = {}), (!this.modals.length || !this.get().options.block && !this.get().options.stackable) && this.pop(), 
            this.initialized || this.initialize();
            var f = {
                id: d,
                target: a,
                options: c
            };
            return e = this.modals.push(f), f.originalZIndex = a.css("z-index"), a.css("z-index", this.baseZIndex + e), 
            c.block && (h.scrollView.add(".ui-scroll-view", a), h.scrollView.watch(a), this.block(this.modals[e - 1])), 
            c.effect ? c.effect(a) : a.show().removeClass("_hidden"), a.trigger("uimodalopen"), 
            d;
        },
        pop: function(a) {
            this.close(null, a);
        },
        next: function(a, b) {
            return this.pop(!1), this.push(a, b);
        },
        close: function(a, b) {
            var c, d, e;
            this.paused || (this.clickTarget = null, this.modals.length && (c = a ? this.get(a, !0) : this.modals.pop(), 
            c && (d = c.target, e = c.options, d.css("z-index", c.originalZIndex), e.block && (h.scrollView.remove(".ui-scroll-view", d), 
            h.scrollView.unwatch(d), this.unblock(a)), this.modals.length || this.terminate(), 
            b !== !1 && d.trigger("uimodalclose")[e.disposable ? "remove" : "hide"]())));
        },
        clear: function() {
            for (var a = this.modals.length; a--; ) this.pop();
        }
    }), colon.truncate = function(a, b) {
        return a || (a = ""), a.length > b ? a.slice(0, b) + "..." : a;
    };
    var i = /^(-?\d+)(\d{3})/;
    colon.format = function(a) {
        for (a = a.toString(); a !== (a = a.replace(i, "$1,$2")); ) ;
        return a;
    }, colon.padding = function(a, b) {
        b || (b = 2);
        for (var c = a.toString().split(".")[0].length; c++ < b; ) a = "0" + a;
        return a;
    }, colon.unique = function(a) {
        a.filter(function(a, b, c) {
            return c.indexOf(a) === b;
        });
    }, colon.template = function(a, c) {
        var d = colon.config.templates[a];
        return d || (d = Handlebars.compile(b("#template-" + a).html()), colon.config.templates[a] = d), 
        b.trim(d(c)).replace(/^[\x20\t]+/gm, "").replace(/[\x20\t]+$/gm, "").replace(/[\r\n]+/g, "");
    };
    var j = /\$\{?(\d+)\}?/g;
    colon.t = function(a) {
        var c, d, e = b.makeArray(arguments).slice(1);
        if (colon.config.text[a] && (a = colon.config.text[a]), arguments.length >= 2) {
            for (e = b.makeArray(arguments).slice(1), d = e.length - 1; c = e[d]; --d) "array" === b.type(c) && e.splice.apply(e, [ d, 1 ].concat(c));
            return a.replace(j, function(a, b) {
                return colon.html.escape(e[+b - 1] || a);
            });
        }
        return a;
    }, g.once = function(a, b) {
        var c, d = !1;
        return function() {
            return d ? c : (c = a.apply(b, arguments), d = !0, c);
        };
    }, g.exec = function(b, c) {
        c || (c = a);
        for (var d, e = b.toString().split("."), f = 0, g = e.length; f < g; ++f) {
            d = e[f];
            {
                if (!(d in c)) return;
                c = c[d];
            }
        }
        return c;
    }, f("colon.query", {
        slim: function(a) {
            var b, d, e = {};
            for (b in a) d = a[b], null !== d && d !== c && (e[b] = d);
            return e;
        },
        build: function(b, c) {
            var d, f = a.encodeURIComponent, g = [];
            1 === arguments.length && (c = b, b = e.pathname), c = colon.query.slim(c);
            for (d in c) g.push(f(d) + "=" + f(c[d]));
            return g = g.join("&"), b + (g.length ? (b.indexOf("?") === -1 ? "?" : "&") + g : "");
        },
        replace: function(c, d, f) {
            var g = colon.query.build(b.extend(colon.query.parse(), c)) + (f !== !1 ? e.hash : "");
            return g !== e.href && d && a.history.replaceState && a.history.replaceState(null, "", g), 
            g;
        },
        parse: function(b) {
            b = (b || a.location.search).replace(/^[^?]*\?/, "").replace(/\+/g, " ").split("&");
            var c, d, e, f = a.decodeURIComponent, g = /^([^=]+)=(.*)$/, h = {};
            for (c = 0; d = b[c]; ++c) e = g.exec(d) || [], e[1] && (h[f(e[1])] = e[2] && f(e[2]));
            return h;
        }
    }), colon.query.base = colon.query.parse(), g.updateQuery = function(c, d, f) {
        "string" !== b.type(c) && (f = d, d = c, c = e.pathname);
        var h = g.queryString(b.extend(g.parseQuery(), d)), i = c + (h ? "?" + h : ""), j = e.pathname + e.search;
        j !== i && (e.hash && (i += e.hash), f ? a.history.replaceState && a.history.replaceState(null, "", i) : e.href = i);
    }, g.updateURL = function(a, c) {
        if (a = b(a), a.length && c) {
            var d = a[0].href.split("?"), e = d[0], f = d.queryString(b.extend(d.parseQuery(d[1] || ""), c));
            a.attr("href", e + "?" + f);
        }
    }, g.queryString = function(b, d) {
        var e, f, g = [], h = a.encodeURIComponent;
        for (e in b) switch (f = b[e]) {
          case null:
          case c:
            break;

          default:
            g.push(h(e) + "=" + h(f));
        }
        return g = g.join("&"), d ? colon.html.escape(g) : g;
    }, g.parseQuery = function(b) {
        b = (b || a.location.search).replace(/^[^?]*\?/, "");
        for (var c, d, e, f, g = b.replace(/\+/g, " ").split("&"), h = 0, i = {}; c = g[h]; ++h) d = /^([^=]+)=(.*)$/.exec(c) || [], 
        d[1] && (e = a.decodeURIComponent(d[1]), f = d[2] && a.decodeURIComponent(d[2]), 
        i[e] = f);
        return i;
    }, g.loc = {}, g.loc.hash = function(b) {
        var c;
        return null === b ? (e.hash = "#", null) : b ? (c = g.loc.hash.stringify(b), e.hash = c, 
        c) : g.loc.hash.parse(a.decodeURIComponent((/#(.+)$/.exec(a.location.href) || [])[1] || ""));
    }, g.loc.hash.stringify = function(a) {
        var b, c, d = [];
        for (b in a) c = a[b], "number" != typeof c && !c || "function" == typeof c || (c === !0 ? d.push(encodeURIComponent(b)) : d.push([ encodeURIComponent(b), encodeURIComponent(a[b]) ].join("=")));
        return d.join("&");
    }, g.loc.parse = function(a) {
        for (var b, c, d, e, f = a.split("&"), g = 0, h = {}; b = f[g]; ++g) c = /^([^=]+)=?(.*)$/.exec(b) || [], 
        c[1] && (d = decodeURIComponent(c[1]), e = c[2] && decodeURIComponent(c[2]), e = !e || (isNaN(Number(e)) ? e : Number(e)), 
        h[d] = e);
        return h;
    }, colon.lazyImage = function(a) {
        var c = b("._lazy-image", a);
        return !!c.closest(a).is(a) && void c.each(function() {
            var a = b(this);
            a.attr("src", a.dataset("src")).removeClass("_lazy-image");
        });
    }, f("colon.html", {
        escape: function(a) {
            return a.toString().replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        },
        unescape: function(a) {
            return a.toString().replace(/&quot;/g, '"').replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&amp;/g, "&");
        },
        title: function() {
            var a = d.title;
            return function(c) {
                var e = d.title;
                c = "function" === b.type(c) ? c(e, a) : c, c !== e && (d.title = null === c ? h.title.original : c || "");
            };
        }(),
        iframe: function(a, c) {
            return a = colon.query.build(a, c), b('<iframe src="' + a + '" marginwidth="0" marginheight="0" frameborder="0" allowtransparency="true" scrolling="no"></iframe>');
        }
    });
}(window, jQuery);
//# sourceMappingURL=colon.min.js.map